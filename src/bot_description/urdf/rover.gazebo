<?xml version="1.0" ?>

<robot>
  <self_collide>true</self_collide>
  <gazebo reference="base_link">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="Left_rocker">
    <material>Gazebo/Grey</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="Right_rocker">
    <material>Gazebo/Grey</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="Left_bogie">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="Right_bogie">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="wheel_1">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="wheel_2">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="wheel_3">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="wheel_4">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="wheel_5">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="wheel_6">
    <material>Gazebo/Trunk</material>
    <selfCollide>true</selfCollide>
  </gazebo>

  <!-- old plugin -->
  <!-- <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>wheel_joint_1</leftJoint>
      <rightJoint>wheel_joint_4</rightJoint>
      <rosDebugLevel>1</rosDebugLevel>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelSeparation>0.43</wheelSeparation>
      <wheelDiameter>0.15</wheelDiameter>
      <torque>0.1</torque>
      <commandTopic>cmd_vel_filtered</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo> -->

  <!-- new plugin for 4 wheels -->
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>10.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <leftFrontJoint>wheel_joint_4</leftFrontJoint>
      <rightFrontJoint>wheel_joint_1</rightFrontJoint>
      <leftRearJoint>wheel_joint_6</leftRearJoint>
      <rightRearJoint>wheel_joint_3</rightRearJoint>
      <wheelSeparation>0.43</wheelSeparation>
      <wheelDiameter>0.215</wheelDiameter>
      <robotBaseFrame>root_link</robotBaseFrame>
      <torque>20</torque><!-- _filtered -->
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <broadcastTF>true</broadcastTF>
    </plugin>
  </gazebo>

  <gazebo reference="sensor_laser">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0.2 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3</min_angle>
            <max_angle>3<!-- 1.570796 --></max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/mrt/laser/scan</topicName>
        <frameName>sensor_laser</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
    <!-- <sensor type="depth" name="camera1"> -->
      <update_rate>5.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>mrt/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
      <!-- (Uncomment this for RGBD camera) <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn> -->
        <!-- Keep this zero, update_rate in the parent <sensor> tag
          will control the frame rate. -->
        <!-- <updateRate>0.0</updateRate>
        <cameraName>mrt/camera1</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>7.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
      </plugin> -->
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>

  </gazebo>
  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>fix</topicName>
      <velocityTopicName>fix_velocity</velocityTopicName>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>0.0001 0.0001 0.0001</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.0 0.0 0.0</velocityGaussianNoise>
    </plugin>
  </gazebo>
</robot>
